# This workflow configures the CI/CD pipeline to install dependencies, run lint checks, and execute tests on a Python application.
# For more information, visit: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application CI/CD

# Define the events that trigger the workflow: push and pull requests on the main branch.
on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

# Set the permissions for the workflow: only read access to the repository content is needed.
permissions:
  contents: read

# Define the jobs and steps in the workflow.
jobs:
  build:
    # Set the runner environment to the latest version of Ubuntu.
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code.
      - uses: actions/checkout@v3
      
      # Setup Python 3.10 environment.
      - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.5"

      
      # Install the necessary dependencies.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Lint the code with flake8.
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names.
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Treat all errors as warnings, setting a complexity threshold and max line length.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Run unit tests with pytest.
      - name: Test with pytest
        run: |
          pytest
